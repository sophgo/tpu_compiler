//===- TPUDialect.cpp - MLIR Dialect for TPU implementation -------===//
//
// Copyright 2019 The MLIR Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// =============================================================================
//
// This file implements the TPU dialect and its operations.
//
//===----------------------------------------------------------------------===//

#include "mlir/Dialect/TPU/TPUDialect.h"
#include "mlir/IR/Builders.h"
#include "mlir/IR/Function.h"
#include "mlir/IR/Module.h"
#include "mlir/IR/OpImplementation.h"
#include "mlir/IR/PatternMatch.h"
#include "mlir/IR/StandardTypes.h"

using namespace mlir;
using namespace mlir::tpu;

StringRef TPUDialect::getDialectName() { return "tpu"; }

TPUDialect::TPUDialect(MLIRContext *context)
    : Dialect(getDialectName(), context) {
  addOperations<
    //LaunchOp, LaunchFuncOp,
#define GET_OP_LIST
#include "mlir/Dialect/TPU/TPUOps.cpp.inc"
                >();
}

#define GET_OP_CLASSES
#include "mlir/Dialect/TPU/TPUOps.cpp.inc"

//===----------------------------------------------------------------------===//
// TPU OpInterface definitions
//===----------------------------------------------------------------------===//
#include "mlir/Dialect/TPU/TPUInterface.cpp.inc"


#define DECLEAR_GET_OP_NAME_METHOD(OP) \
    StringRef OP::getOpName() {return name().getValue();}
DECLEAR_GET_OP_NAME_METHOD(BatchNormOp)
DECLEAR_GET_OP_NAME_METHOD(ConcatOp)
DECLEAR_GET_OP_NAME_METHOD(Conv2DOp)
DECLEAR_GET_OP_NAME_METHOD(CropOp)
DECLEAR_GET_OP_NAME_METHOD(DeConv2DOp)
DECLEAR_GET_OP_NAME_METHOD(DetectionOutputOp)
DECLEAR_GET_OP_NAME_METHOD(DivOp)
DECLEAR_GET_OP_NAME_METHOD(EltwiseOp)
DECLEAR_GET_OP_NAME_METHOD(FullyConnectedOp)
DECLEAR_GET_OP_NAME_METHOD(InputOp)
DECLEAR_GET_OP_NAME_METHOD(NormalizeOp)
DECLEAR_GET_OP_NAME_METHOD(PermuteOp)
DECLEAR_GET_OP_NAME_METHOD(Pool2DOp)
DECLEAR_GET_OP_NAME_METHOD(PowerOp)
DECLEAR_GET_OP_NAME_METHOD(PReluOp)
DECLEAR_GET_OP_NAME_METHOD(PriorBoxOp)
DECLEAR_GET_OP_NAME_METHOD(ReluOp)
DECLEAR_GET_OP_NAME_METHOD(ReshapeOp)
DECLEAR_GET_OP_NAME_METHOD(ScaleOp)
DECLEAR_GET_OP_NAME_METHOD(SigmoidOp)
DECLEAR_GET_OP_NAME_METHOD(SliceOp)
DECLEAR_GET_OP_NAME_METHOD(SoftmaxOp)
DECLEAR_GET_OP_NAME_METHOD(SqrtOp)
DECLEAR_GET_OP_NAME_METHOD(TanHOp)
DECLEAR_GET_OP_NAME_METHOD(UpsampleOp)
//--------------------------------------
DECLEAR_GET_OP_NAME_METHOD(LoadWeightOp)
DECLEAR_GET_OP_NAME_METHOD(QuantizationOp)
DECLEAR_GET_OP_NAME_METHOD(DequantizationOp)
DECLEAR_GET_OP_NAME_METHOD(DummyDataOp)


#define DECLEAR_GET_LAYER_ID_METHOD(OP) \
    int OP::getLayerId() {return layer_id().getValue().getLimitedValue();}
#define DECLEAR_EMPTY_LAYER_ID_METHOD(OP) \
    int OP::getLayerId() {assert(false); return 0;}
DECLEAR_GET_LAYER_ID_METHOD(BatchNormOp)
DECLEAR_GET_LAYER_ID_METHOD(ConcatOp)
DECLEAR_GET_LAYER_ID_METHOD(Conv2DOp)
DECLEAR_GET_LAYER_ID_METHOD(CropOp)
DECLEAR_GET_LAYER_ID_METHOD(DeConv2DOp)
DECLEAR_GET_LAYER_ID_METHOD(DetectionOutputOp)
DECLEAR_GET_LAYER_ID_METHOD(DivOp)
DECLEAR_GET_LAYER_ID_METHOD(EltwiseOp)
DECLEAR_GET_LAYER_ID_METHOD(FullyConnectedOp)
DECLEAR_GET_LAYER_ID_METHOD(InputOp)
DECLEAR_GET_LAYER_ID_METHOD(NormalizeOp)
DECLEAR_GET_LAYER_ID_METHOD(PermuteOp)
DECLEAR_GET_LAYER_ID_METHOD(Pool2DOp)
DECLEAR_GET_LAYER_ID_METHOD(PowerOp)
DECLEAR_GET_LAYER_ID_METHOD(PReluOp)
DECLEAR_GET_LAYER_ID_METHOD(PriorBoxOp)
DECLEAR_GET_LAYER_ID_METHOD(ReluOp)
DECLEAR_GET_LAYER_ID_METHOD(ReshapeOp)
DECLEAR_GET_LAYER_ID_METHOD(ScaleOp)
DECLEAR_GET_LAYER_ID_METHOD(SigmoidOp)
DECLEAR_GET_LAYER_ID_METHOD(SliceOp)
DECLEAR_GET_LAYER_ID_METHOD(SoftmaxOp)
DECLEAR_GET_LAYER_ID_METHOD(SqrtOp)
DECLEAR_GET_LAYER_ID_METHOD(TanHOp)
DECLEAR_GET_LAYER_ID_METHOD(UpsampleOp)
//--------------------------------------
DECLEAR_EMPTY_LAYER_ID_METHOD(LoadWeightOp)
DECLEAR_EMPTY_LAYER_ID_METHOD(QuantizationOp)
DECLEAR_EMPTY_LAYER_ID_METHOD(DequantizationOp)
DECLEAR_EMPTY_LAYER_ID_METHOD(DummyDataOp)


#define DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(OP) \
    float OP::getResultQuantThreshold() {return threshold_y().getValue().convertToFloat();}
#define DECLEAR_EMPTY_RESULT_QUANT_THRESHOLD_METHOD(OP) \
    float OP::getResultQuantThreshold() {assert(false); return 0.0f;}
DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(BatchNormOp)
DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(ConcatOp)
DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(Conv2DOp)
DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(CropOp)
DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(DeConv2DOp)
DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(DetectionOutputOp)
DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(DivOp)
DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(EltwiseOp)
DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(FullyConnectedOp)
DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(InputOp)
DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(NormalizeOp)
DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(PermuteOp)
DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(Pool2DOp)
DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(PowerOp)
DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(PReluOp)
DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(PriorBoxOp)
DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(ReluOp)
DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(ReshapeOp)
DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(ScaleOp)
DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(SigmoidOp)
DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(SliceOp)
DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(SoftmaxOp)
DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(SqrtOp)
DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(TanHOp)
DECLEAR_GET_RESULT_QUANT_THRESHOLD_METHOD(UpsampleOp)
//--------------------------------------
DECLEAR_EMPTY_RESULT_QUANT_THRESHOLD_METHOD(LoadWeightOp)
DECLEAR_EMPTY_RESULT_QUANT_THRESHOLD_METHOD(QuantizationOp)
DECLEAR_EMPTY_RESULT_QUANT_THRESHOLD_METHOD(DequantizationOp)
DECLEAR_EMPTY_RESULT_QUANT_THRESHOLD_METHOD(DummyDataOp)


#define DECLEAR_GET_OP_QUANT_METHOD(OP) \
    StringRef OP::getOpQuant() {return quant();}
#define DECLEAR_EMPTY_OP_QUANT_METHOD(OP) \
    StringRef OP::getOpQuant() {assert(false); return "";}
DECLEAR_GET_OP_QUANT_METHOD(BatchNormOp)
DECLEAR_GET_OP_QUANT_METHOD(ConcatOp)
DECLEAR_GET_OP_QUANT_METHOD(Conv2DOp)
DECLEAR_GET_OP_QUANT_METHOD(CropOp)
DECLEAR_GET_OP_QUANT_METHOD(DeConv2DOp)
DECLEAR_GET_OP_QUANT_METHOD(DetectionOutputOp)
DECLEAR_GET_OP_QUANT_METHOD(DivOp)
DECLEAR_GET_OP_QUANT_METHOD(EltwiseOp)
DECLEAR_GET_OP_QUANT_METHOD(FullyConnectedOp)
DECLEAR_GET_OP_QUANT_METHOD(InputOp)
DECLEAR_GET_OP_QUANT_METHOD(NormalizeOp)
DECLEAR_GET_OP_QUANT_METHOD(PermuteOp)
DECLEAR_GET_OP_QUANT_METHOD(Pool2DOp)
DECLEAR_GET_OP_QUANT_METHOD(PowerOp)
DECLEAR_GET_OP_QUANT_METHOD(PReluOp)
DECLEAR_GET_OP_QUANT_METHOD(PriorBoxOp)
DECLEAR_GET_OP_QUANT_METHOD(ReluOp)
DECLEAR_GET_OP_QUANT_METHOD(ReshapeOp)
DECLEAR_GET_OP_QUANT_METHOD(ScaleOp)
DECLEAR_GET_OP_QUANT_METHOD(SigmoidOp)
DECLEAR_GET_OP_QUANT_METHOD(SliceOp)
DECLEAR_GET_OP_QUANT_METHOD(SoftmaxOp)
DECLEAR_GET_OP_QUANT_METHOD(SqrtOp)
DECLEAR_GET_OP_QUANT_METHOD(TanHOp)
DECLEAR_GET_OP_QUANT_METHOD(UpsampleOp)
//--------------------------------------
DECLEAR_EMPTY_OP_QUANT_METHOD(LoadWeightOp)
DECLEAR_EMPTY_OP_QUANT_METHOD(QuantizationOp)
DECLEAR_EMPTY_OP_QUANT_METHOD(DequantizationOp)
DECLEAR_EMPTY_OP_QUANT_METHOD(DummyDataOp)


#define DECLEAR_GET_RESULT_ADDRESS_METHOD(OP) \
    APInt OP::getResultAddress() {return offset().getValue();}
#define DECLEAR_EMPTY_RESULT_ADDRESS_METHOD(OP) \
    APInt OP::getResultAddress() {assert(false); return APInt();}
DECLEAR_GET_RESULT_ADDRESS_METHOD(BatchNormOp)
DECLEAR_GET_RESULT_ADDRESS_METHOD(ConcatOp)
DECLEAR_GET_RESULT_ADDRESS_METHOD(Conv2DOp)
DECLEAR_GET_RESULT_ADDRESS_METHOD(CropOp)
DECLEAR_GET_RESULT_ADDRESS_METHOD(DeConv2DOp)
DECLEAR_GET_RESULT_ADDRESS_METHOD(DetectionOutputOp)
DECLEAR_GET_RESULT_ADDRESS_METHOD(DivOp)
DECLEAR_GET_RESULT_ADDRESS_METHOD(EltwiseOp)
DECLEAR_GET_RESULT_ADDRESS_METHOD(FullyConnectedOp)
DECLEAR_GET_RESULT_ADDRESS_METHOD(InputOp)
DECLEAR_GET_RESULT_ADDRESS_METHOD(NormalizeOp)
DECLEAR_GET_RESULT_ADDRESS_METHOD(PermuteOp)
DECLEAR_GET_RESULT_ADDRESS_METHOD(Pool2DOp)
DECLEAR_GET_RESULT_ADDRESS_METHOD(PowerOp)
DECLEAR_GET_RESULT_ADDRESS_METHOD(PReluOp)
DECLEAR_EMPTY_RESULT_ADDRESS_METHOD(PriorBoxOp)
DECLEAR_GET_RESULT_ADDRESS_METHOD(ReluOp)
DECLEAR_EMPTY_RESULT_ADDRESS_METHOD(ReshapeOp)
DECLEAR_GET_RESULT_ADDRESS_METHOD(ScaleOp)
DECLEAR_GET_RESULT_ADDRESS_METHOD(SigmoidOp)
DECLEAR_GET_RESULT_ADDRESS_METHOD(SliceOp)
DECLEAR_EMPTY_RESULT_ADDRESS_METHOD(SoftmaxOp)
DECLEAR_GET_RESULT_ADDRESS_METHOD(SqrtOp)
DECLEAR_GET_RESULT_ADDRESS_METHOD(TanHOp)
DECLEAR_GET_RESULT_ADDRESS_METHOD(UpsampleOp)
//--------------------------------------
DECLEAR_EMPTY_RESULT_ADDRESS_METHOD(LoadWeightOp)
DECLEAR_EMPTY_RESULT_ADDRESS_METHOD(QuantizationOp)
DECLEAR_EMPTY_RESULT_ADDRESS_METHOD(DequantizationOp)
DECLEAR_EMPTY_RESULT_ADDRESS_METHOD(DummyDataOp)
